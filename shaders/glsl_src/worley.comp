#version 460
#include "noise.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (constant_id = 0) const uint frequency = 8;
layout (constant_id = 1) const uint octaves = 1;

#if local_size_z == 1
    layout (binding = 0, rgba8) uniform writeonly image2D outImage;
#else
    layout (binding = 0, rgba8) uniform writeonly image3D outImage;
#endif

void main()
{
    vec4 temp = vec4(0.0);
    for (uint i = 0; i < 4; i++)
    {
#if local_size_z == 1
        const vec2 cell_loc = vec2(gl_GlobalInvocationID.xy) / vec2(gl_NumWorkGroups.xy);
        temp[i] = fbm_worley(cell_loc, frequency * (i + 1), octaves);
#else
        const vec3 cell_loc = vec3(gl_GlobalInvocationID.xyz) / vec3(gl_NumWorkGroups.xyz);
        temp[i] = fbm_worley(cell_loc, frequency * (i + 1), octaves);
#endif
    }

#if local_size_z == 1
    imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), temp);
#else
    imageStore(outImage, ivec3(gl_GlobalInvocationID.xyz), temp);
#endif
}