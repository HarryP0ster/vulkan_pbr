/*
*Based off the works of Eric Bruneton
*https://evasion.inrialpes.fr/~Eric.Bruneton/
*/

#version 460
#include "LUT.glsl"

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout (binding = 0, rgba32f) uniform writeonly image2D outImage;
layout (binding = 1) uniform sampler2D Transmittance;

void main()
{
    float R, Mu;
    vec2 UV = vec2(gl_GlobalInvocationID.xy) / vec2(imageSize(outImage).xy);

    GetIrradienceRMu(UV, R, Mu);
    imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), vec4(GetTransmittance(Transmittance, R, Mu) * max(Mu, 0.0), 0.0));
}