/*
*Based off the works of Eric Bruneton
*https://evasion.inrialpes.fr/~Eric.Bruneton/
*/

#version 460
#include "LUT.glsl"

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout (binding = 0, rgba16f) uniform writeonly image3D outImage;

layout (binding = 1) uniform sampler3D DeltaSR;
layout (binding = 2) uniform sampler3D DeltaSM;

void main()
{
    vec3 UVW = vec3(0.0);
    UVW.xy = vec2(gl_GlobalInvocationID.xy) / vec2(imageSize(outImage).xy);
    UVW.z = float(gl_GlobalInvocationID.z) / float(imageSize(outImage).z);

    vec4 Ray = texture(DeltaSR, UVW);
    vec4 Mie = texture(DeltaSM, UVW);
    imageStore(outImage, ivec3(gl_GlobalInvocationID.xyz), vec4(Ray.rgb, Mie.r));
}